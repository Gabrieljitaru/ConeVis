document.addEventListener("DOMContentLoaded", function() {
    let lang = localStorage.getItem('lang') || 'en';

    function loadIncludes() {
        const promises = [];
        $("[include-html]").each(function () {
            const element = $(this);
            const file = element.attr("include-html");
            if (file) {
                const promise = new Promise((resolve, reject) => {
                    element.load(file, function (response, status, xhr) {
                        if (status === "error") {
                            element.html("Error loading file: " + xhr.status + " " + xhr.statusText);
                            reject(new Error("Error loading file: " + xhr.status + " " + xhr.statusText));
                        } else {
                            resolve();
                        }
                    });
                });
                promises.push(promise);
            }
        });
        return Promise.all(promises);
    }

    function applyTranslations(translations) {
        const elements = {
            // Navbar
            'nav-opportunities': translations[lang].navbar.opportunities,
            'nav-application': translations[lang].navbar.application_form,
            'nav-mail': translations[lang].navbar.send_mail,
            'nav-call': translations[lang].navbar.call_us,
            'nav-faq': translations[lang].navbar.faq,

            // Hero Section
            'hero-subtitle': translations[lang].hero.subtitle,
            'hero-presentation': translations[lang].hero.presentation,
            'hero-cta': translations[lang].hero.cta_button,

            // Services Section
            'services-title': translations[lang].services.title,
            'services-description': translations[lang].services.description,
            'card-flower-title': translations[lang].services.cards.flower.title,
            'card-flower-description': translations[lang].services.cards.flower.description,
            'card-warehouse-title': translations[lang].services.cards.warehouse.title,
            'card-warehouse-description': translations[lang].services.cards.warehouse.description,
            'card-waitstaff-title': translations[lang].services.cards.waitstaff.title,
            'card-waitstaff-description': translations[lang].services.cards.waitstaff.description,
            'card-construction-title': translations[lang].services.cards.construction.title,
            'card-construction-description': translations[lang].services.cards.construction.description,

            // Contact Section
            'contact-title': translations[lang].contact.title,
            'contact-description': translations[lang].contact.description,

            // Application Section
            'application-title': translations[lang].application.title,
            'application-description': translations[lang].application.description,

            // FAQ Section
            'faq-title': translations[lang].faq.title,
            'faq-description': translations[lang].faq.description,

             // FAQ Page
            'faqpage-title': translations[lang].faqpage.title,
            'faqpage-question1': translations[lang].faqpage.question1,
            'faqpage-answer1': translations[lang].faqpage.answer1,
            'faqpage-question2': translations[lang].faqpage.question2,
            'faqpage-answer2': translations[lang].faqpage.answer2,
            'faqpage-question3': translations[lang].faqpage.question3,
            'faqpage-answer3': translations[lang].faqpage.answer3,
            'faqpage-question4': translations[lang].faqpage.question4,
            'faqpage-answer4': translations[lang].faqpage.answer4,
            'faqpage-question5': translations[lang].faqpage.question5,
            'faqpage-answer5': translations[lang].faqpage.answer5,
            'faqpage-question6': translations[lang].faqpage.question6,
            'faqpage-answer6': translations[lang].faqpage.answer6,
            'faqpage-question7': translations[lang].faqpage.question7,
            'faqpage-answer7': translations[lang].faqpage.answer7,
            'faqpage-question8': translations[lang].faqpage.question8,
            'faqpage-answer8': translations[lang].faqpage.answer8,
            'faqpage-question9': translations[lang].faqpage.question9,
            'faqpage-answer9': translations[lang].faqpage.answer9,
            'faqpage-question10': translations[lang].faqpage.question10,
            'faqpage-answer10': translations[lang].faqpage.answer10,
        };

        for (const [id, text] of Object.entries(elements)) {
            const element = document.getElementById(id);
            if (element) {
                element.textContent = text;
            }
        }
    }

    function loadTranslations() {
        return fetch('js/translations.json')
            .then(response => response.json())
            .then(translations => {
                applyTranslations(translations);
                setLanguageSelect(lang);
            })
            .catch(error => console.error('Error loading the JSON file:', error));
    }

    function setLanguageSelect(lang) {
        const languageSelects = document.querySelectorAll('#language-select');
        languageSelects.forEach(select => {
            select.value = lang;
        });
    }

    function updateLanguage(newLang) {
        lang = newLang;
        localStorage.setItem('lang', lang);
        loadTranslations();
    }

    document.addEventListener('change', function(event) {
        if (event.target.id === 'language-select') {
            updateLanguage(event.target.value);
        }
    });

    document.addEventListener("DOMContentLoaded", function () {
        const serviceCards = document.querySelector(".service-cards");
        const btnLeft = document.getElementById("scroll-left");
        const btnRight = document.getElementById("scroll-right");
    
        // Scorrimento a destra
        btnRight.addEventListener("click", function () {
            serviceCards.scrollBy({ left: 300, behavior: 'smooth' });
        });
    
        // Scorrimento a sinistra
        btnLeft.addEventListener("click", function () {
            serviceCards.scrollBy({ left: -300, behavior: 'smooth' });
        });
    });
    

// Load includes, then set language and load translations
loadIncludes().then(() => {
    lang = localStorage.getItem('lang') || 'en';
    setLanguageSelect(lang);
    loadTranslations();
});
});